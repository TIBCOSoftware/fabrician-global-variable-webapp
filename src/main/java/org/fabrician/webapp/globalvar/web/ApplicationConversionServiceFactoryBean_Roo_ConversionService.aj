// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.fabrician.webapp.globalvar.web;

import org.fabrician.webapp.globalvar.domain.ArchiveVariable;
import org.fabrician.webapp.globalvar.domain.ComponentVariable;
import org.fabrician.webapp.globalvar.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<ArchiveVariable, String> ApplicationConversionServiceFactoryBean.getArchiveVariableToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fabrician.webapp.globalvar.domain.ArchiveVariable, java.lang.String>() {
            public String convert(ArchiveVariable archiveVariable) {
                return new StringBuilder().append(archiveVariable.getGvName()).append(' ').append(archiveVariable.getGvValue()).append(' ').append(archiveVariable.getArchiveName()).append(' ').append(archiveVariable.getArchiveId()).toString();
            }
        };
    }
    
    public Converter<Long, ArchiveVariable> ApplicationConversionServiceFactoryBean.getIdToArchiveVariableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.fabrician.webapp.globalvar.domain.ArchiveVariable>() {
            public org.fabrician.webapp.globalvar.domain.ArchiveVariable convert(java.lang.Long id) {
                return ArchiveVariable.findArchiveVariable(id);
            }
        };
    }
    
    public Converter<String, ArchiveVariable> ApplicationConversionServiceFactoryBean.getStringToArchiveVariableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fabrician.webapp.globalvar.domain.ArchiveVariable>() {
            public org.fabrician.webapp.globalvar.domain.ArchiveVariable convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ArchiveVariable.class);
            }
        };
    }
    
    public Converter<ComponentVariable, String> ApplicationConversionServiceFactoryBean.getComponentVariableToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fabrician.webapp.globalvar.domain.ComponentVariable, java.lang.String>() {
            public String convert(ComponentVariable componentVariable) {
                return new StringBuilder().append(componentVariable.getGvName()).append(' ').append(componentVariable.getGvValue()).append(' ').append(componentVariable.getProject()).append(' ').append(componentVariable.getEnvironment()).toString();
            }
        };
    }
    
    public Converter<Long, ComponentVariable> ApplicationConversionServiceFactoryBean.getIdToComponentVariableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.fabrician.webapp.globalvar.domain.ComponentVariable>() {
            public org.fabrician.webapp.globalvar.domain.ComponentVariable convert(java.lang.Long id) {
                return ComponentVariable.findComponentVariable(id);
            }
        };
    }
    
    public Converter<String, ComponentVariable> ApplicationConversionServiceFactoryBean.getStringToComponentVariableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fabrician.webapp.globalvar.domain.ComponentVariable>() {
            public org.fabrician.webapp.globalvar.domain.ComponentVariable convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ComponentVariable.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getArchiveVariableToStringConverter());
        registry.addConverter(getIdToArchiveVariableConverter());
        registry.addConverter(getStringToArchiveVariableConverter());
        registry.addConverter(getComponentVariableToStringConverter());
        registry.addConverter(getIdToComponentVariableConverter());
        registry.addConverter(getStringToComponentVariableConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
